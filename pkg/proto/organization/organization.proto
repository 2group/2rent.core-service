syntax = "proto3";

package organization;

import "google/protobuf/any.proto";

option go_package = "2rent.organization.v1;organizationv1";

service OrganizationService {
    rpc CreateOrganization (CreateOrganizationRequest) returns (CreateOrganizationResponse);
    rpc UpdateOrganization (UpdateOrganizationRequest) returns (UpdateOrganizationResponse);
    rpc ListOrganizations (ListOrganizationsRequest) returns (ListOrganizationsResponse);

    rpc CreateProperty (CreatePropertyRequest) returns (CreatePropertyResponse);
    rpc UpdateProperty (UpdatePropertyRequest) returns (UpdatePropertyResponse);
    rpc DeleteProperty (DeletePropertyRequest) returns (DeletePropertyResponse);
}

message CreateOrganizationRequest {
    string bin = 1;
    string type = 2;
    string legal_name = 3;
    string legal_address = 4;
    string user_id = 5;
}

message CreateOrganizationResponse {
    Organization organization = 1;
}

message UpdateOrganizationRequest {
    string id = 1;
    string bin = 2;
    string type = 3;
    string legal_name = 4;
    string legal_address = 5;
}

message UpdateOrganizationResponse {
    Organization organization = 1;
}

message CreatePropertyRequest {
    string organization_id = 1;
    string property_name = 2;
    Address address  = 3;
    repeated PricingRule pricing_rules = 4;
    repeated PropertyImage property_images = 5;
    repeated PropertyCharacteristic property_characteristics = 6;
}

message CreatePropertyResponse {
    Property property = 1;
}

message UpdatePropertyRequest {
    string id = 1;
    string organization_id = 2;
    string property_name = 3;
    string location = 4;
    int32 price = 5;
    string availability = 6;
    repeated PropertyImage property_images = 7;
    repeated PropertyCharacteristic property_characteristics = 8;
}

message ListOrganizationsRequest {
    int32 page = 1;
    int32 limit = 2;
}

message ListOrganizationsResponse {
    repeated Organization organizations = 1;
}

message UpdatePropertyResponse {
    Property property = 1;
}

message DeletePropertyRequest {
    string property_id = 1;
}

message DeletePropertyResponse {
    bool success = 1;
}

message Organization {
    string id = 1;
    string bin = 2;
    string type = 3;
    string legal_name = 4;
    string legal_address = 5;
    string created_at = 6;
    string updated_at = 7;
}

message OrganizationModel {
    string id = 1;
    string bin = 2;
    string type = 3;
    string legal_name = 4;
    string legal_address = 5;
    string updated_at = 6;
    string created_at = 7;
}

message Property {
    string id = 1;
    string description = 2;
    float rating = 3;
    string property_status = 4;
    Address address = 5;
    Organization organizaiton = 6;
    repeated PricingRule pricing_rules = 7;
    repeated AvailabilitySlot availability_slots = 8;
    repeated PropertyImage property_images = 9;
    repeated PropertyCharacteristic property_characteristics = 10;
}

message PropertyModel {
    string id = 1;
    string organization_id = 2;
    string address_id = 3;
    string description = 4;
    float rating = 5;
    string property_status = 6;
    string updated_at = 7;
    string created_at = 8;
}

message PropertyImage {
    string id = 1;
    string property_id = 2;
    string image_url = 3;
    int32 image_index = 4;
}

message PropertyCharacteristic {
    string id = 1;
    string property_id = 2;
    string name = 3;
    string data_type = 4;
    google.protobuf.Any value = 5;
}

message Address {
    optional string id = 1;
    string address_name = 2;
    string type = 3;
    string city = 4;
    double latitude = 5;
    double longitude = 6;
}

message PricingRule {
    optional string id = 1;
    optional string property_id = 2;
    string duration_type = 3; // 'Hourly', 'Daily', 'Monthly'
    string rule_type = 4;     // 'include', 'exclude'
    string category = 5;      // 'Regular', 'Weekend', 'Holiday', 'Custom'
    optional int32 price = 6;          // NULL if rule_type = 'exclude'
    optional string from_time = 7;     // NULL if always applicable
    optional string to_time = 8;       // NULL if always applicable
}

message AvailabilitySlot {
    string id = 1;
    optional string property_id = 2;
    string start_time = 3;
    string end_time = 4;
    string status = 5; // 'blocked', 'reserved', 'free'
}
